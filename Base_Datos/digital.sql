-- MySQL Script generated by MySQL Workbench
-- 09/21/16 20:27:46
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema digital
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema digital
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `digital` DEFAULT CHARACTER SET utf8 ;
USE `digital` ;

-- -----------------------------------------------------
-- Table `digital`.`aniolectivos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`aniolectivos` (
  `idaniolectivo` INT NOT NULL,
  `nombreaniolectivo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idaniolectivo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digital`.`grados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`grados` (
  `idgrado` INT NOT NULL,
  `codgrado` INT NOT NULL,
  `nombregrado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idgrado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digital`.`cursos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`cursos` (
  `idcurso` INT NOT NULL,
  `aniolectivo_idaniolectivo` INT NOT NULL,
  `grado_idgrado` INT NOT NULL,
  `estudiante_idestudiante` INT NOT NULL,
  PRIMARY KEY (`idcurso`, `aniolectivo_idaniolectivo`, `grado_idgrado`, `estudiante_idestudiante`))
ENGINE = InnoDB;

CREATE INDEX `fk_curso_aniolectivo1_idx` ON `digital`.`cursos` (`aniolectivo_idaniolectivo` ASC);

CREATE INDEX `fk_curso_grado1_idx` ON `digital`.`cursos` (`grado_idgrado` ASC);

CREATE INDEX `fk_curso_estudiante1_idx` ON `digital`.`cursos` (`estudiante_idestudiante` ASC);


-- -----------------------------------------------------
-- Table `digital`.`estudiantes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`estudiantes` (
  `idestudiante` INT NOT NULL,
  `codestudiante` INT NOT NULL,
  `curso_idcurso` INT NOT NULL,
  `curso_aniolectivo_idaniolectivo` INT NOT NULL,
  `curso_grado_idgrado` INT NOT NULL,
  `curso_estudiante_idestudiante` INT NOT NULL,
  PRIMARY KEY (`idestudiante`, `curso_idcurso`, `curso_aniolectivo_idaniolectivo`, `curso_grado_idgrado`, `curso_estudiante_idestudiante`))
ENGINE = InnoDB;

CREATE INDEX `fk_estudiante_curso1_idx` ON `digital`.`estudiantes` (`curso_idcurso` ASC, `curso_aniolectivo_idaniolectivo` ASC, `curso_grado_idgrado` ASC, `curso_estudiante_idestudiante` ASC);


-- -----------------------------------------------------
-- Table `digital`.`estados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`estados` (
  `idestado` INT NOT NULL,
  `nombreestado` VARCHAR(45) NOT NULL,
  `observadorestado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idestado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digital`.`coordinadores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`coordinadores` (
  `idcoordinador` INT NOT NULL,
  `cargocoordinador` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idcoordinador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digital`.`profesiones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`profesiones` (
  `idprofesion` INT NOT NULL,
  `nombreprofesion` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idprofesion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digital`.`docentes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`docentes` (
  `iddocente` INT NOT NULL,
  `profesion` VARCHAR(45) NOT NULL,
  `profesion_idprofesion` INT NOT NULL,
  `curso_idcurso` INT NOT NULL,
  `curso_aniolectivo_idaniolectivo` INT NOT NULL,
  `curso_grado_idgrado` INT NOT NULL,
  PRIMARY KEY (`iddocente`, `profesion_idprofesion`, `curso_idcurso`, `curso_aniolectivo_idaniolectivo`, `curso_grado_idgrado`))
ENGINE = InnoDB;

CREATE INDEX `fk_docente_profesion1_idx` ON `digital`.`docentes` (`profesion_idprofesion` ASC);


-- -----------------------------------------------------
-- Table `digital`.`administradores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`administradores` (
  `idadministrador` INT NOT NULL,
  `codadministrador` INT NOT NULL,
  PRIMARY KEY (`idadministrador`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digital`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`usuarios` (
  `id` INT UNSIGNED AUTO_INCREMENT,
  `username` VARCHAR(50),
  `password` VARCHAR(255),
  `tipodocumentousuario` VARCHAR(45) NOT NULL,
  `documentousuario` VARCHAR(45) NOT NULL,
  `nombresusuario` VARCHAR(45) NOT NULL,
  `apellidosusuario` VARCHAR(45) NOT NULL,
  `direccionusuario` VARCHAR(45) NOT NULL,
  `telefonousuario` INT NOT NULL,
  `emailusuario` VARCHAR(45) NOT NULL,
  `sexousuario` VARCHAR(45) NOT NULL,
  `fechanacimusuario` DATE NULL,
  `estudiante_idestudiante` INT NOT NULL,
  `estado_idestado` INT NOT NULL,
  `coordinador_idcoordinador` INT NOT NULL,
  `docente_iddocente` INT NOT NULL,
  `administrador_idadministrador` INT NOT NULL,
  PRIMARY KEY (`id`, `estudiante_idestudiante`, `estado_idestado`, `coordinador_idcoordinador`, `docente_iddocente`, `administrador_idadministrador`))
ENGINE = InnoDB;

CREATE INDEX `fk_usuario_estudiante1_idx` ON `digital`.`usuarios` (`estudiante_idestudiante` ASC);

CREATE INDEX `fk_usuario_estado1_idx` ON `digital`.`usuarios` (`estado_idestado` ASC);

CREATE INDEX `fk_usuario_coordinador1_idx` ON `digital`.`usuarios` (`coordinador_idcoordinador` ASC);

CREATE INDEX `fk_usuario_docente1_idx` ON `digital`.`usuarios` (`docente_iddocente` ASC);

CREATE INDEX `fk_usuario_administrador1_idx` ON `digital`.`usuarios` (`administrador_idadministrador` ASC);


-- -----------------------------------------------------
-- Table `digital`.`acudientes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`acudientes` (
  `idacudiente` INT NOT NULL,
  `nombreacudiente` VARCHAR(45) NOT NULL,
  `telefonoacudiente` INT NOT NULL,
  `estudiante_idestudiante` INT NOT NULL,
  PRIMARY KEY (`idacudiente`, `estudiante_idestudiante`))
ENGINE = InnoDB;

CREATE INDEX `fk_acudiente_estudiante1_idx` ON `digital`.`acudientes` (`estudiante_idestudiante` ASC);


-- -----------------------------------------------------
-- Table `digital`.`periodos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`periodos` (
  `idperiodo` INT NOT NULL,
  `nombreperiodo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idperiodo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digital`.`Areas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`Areas` (
  `id` INT AUTO_INCREMENT PRIMARY KEY,
  `nombrearea` VARCHAR(45) NOT NULL
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digital`.`materias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`materias` (
  `id` INT AUTO_INCREMENT PRIMARY KEY,
  `nombremateria` VARCHAR(45),
  `area_id` INT NOT NULL
  )
ENGINE = InnoDB;

CREATE INDEX `fk_materia_area1_idx` ON `digital`.`materias` (`area_id` ASC);


-- -----------------------------------------------------
-- Table `digital`.`reportenotas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`reportenotas` (
  `idreportenotas` INT NOT NULL,
  `observaciones` VARCHAR(45) NOT NULL,
  `notapromedio` VARCHAR(45) NOT NULL,
  `estudiante_idestudiante` INT NOT NULL,
  `curso_idcurso` INT NOT NULL,
  `curso_aniolectivo_idaniolectivo` INT NOT NULL,
  `curso_grado_idgrado` INT NOT NULL,
  `periodo_idperiodo` INT NOT NULL,
  PRIMARY KEY (`idreportenotas`, `estudiante_idestudiante`, `curso_idcurso`, `curso_aniolectivo_idaniolectivo`, `curso_grado_idgrado`, `periodo_idperiodo`))
ENGINE = InnoDB;

CREATE INDEX `fk_reportenotas_estudiante1_idx` ON `digital`.`reportenotas` (`estudiante_idestudiante` ASC);

CREATE INDEX `fk_reportenotas_curso1_idx` ON `digital`.`reportenotas` (`curso_idcurso` ASC, `curso_aniolectivo_idaniolectivo` ASC, `curso_grado_idgrado` ASC);

CREATE INDEX `fk_reportenotas_periodo1_idx` ON `digital`.`reportenotas` (`periodo_idperiodo` ASC);


-- -----------------------------------------------------
-- Table `digital`.`inasistencias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`inasistencias` (
  `idinasistencia` INT NOT NULL,
  `fechainasistencia` VARCHAR(45) NOT NULL,
  `aniolectivo_idaniolectivo` INT NOT NULL,
  `docente_iddocente` INT NOT NULL,
  `docente_profesion_idprofesion` INT NOT NULL,
  `docente_curso_idcurso` INT NOT NULL,
  `docente_curso_aniolectivo_idaniolectivo` INT NOT NULL,
  `docente_curso_grado_idgrado` INT NOT NULL,
  `periodo_idperiodo` INT NOT NULL,
  PRIMARY KEY (`idinasistencia`, `aniolectivo_idaniolectivo`, `docente_iddocente`, `docente_profesion_idprofesion`, `docente_curso_idcurso`, `docente_curso_aniolectivo_idaniolectivo`, `docente_curso_grado_idgrado`, `periodo_idperiodo`))
ENGINE = InnoDB;

CREATE INDEX `fk_inasistencia_aniolectivo1_idx` ON `digital`.`inasistencias` (`aniolectivo_idaniolectivo` ASC);

CREATE INDEX `fk_inasistencia_docente1_idx` ON `digital`.`inasistencias` (`docente_iddocente` ASC, `docente_profesion_idprofesion` ASC, `docente_curso_idcurso` ASC, `docente_curso_aniolectivo_idaniolectivo` ASC, `docente_curso_grado_idgrado` ASC);

CREATE INDEX `fk_inasistencia_periodo1_idx` ON `digital`.`inasistencias` (`periodo_idperiodo` ASC);


-- -----------------------------------------------------
-- Table `digital`.`notas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`notas` (
  `idnota` INT NOT NULL,
  `valornota` VARCHAR(45) NOT NULL,
  `fechanota` VARCHAR(45) NOT NULL,
  `materia_idmateria` INT NOT NULL,
  `materia_area_idarea` INT NOT NULL,
  `periodo_idperiodo` INT NOT NULL,
  `aniolectivo_idaniolectivo` INT NOT NULL,
  `docente_iddocente` INT NOT NULL,
  `docente_profesion_idprofesion` INT NOT NULL,
  `docente_curso_idcurso` INT NOT NULL,
  `docente_curso_aniolectivo_idaniolectivo` INT NOT NULL,
  `docente_curso_grado_idgrado` INT NOT NULL,
  `estudiante_idestudiante` INT NOT NULL,
  PRIMARY KEY (`idnota`, `materia_idmateria`, `materia_area_idarea`, `periodo_idperiodo`, `aniolectivo_idaniolectivo`, `docente_iddocente`, `docente_profesion_idprofesion`, `docente_curso_idcurso`, `docente_curso_aniolectivo_idaniolectivo`, `docente_curso_grado_idgrado`, `estudiante_idestudiante`))
ENGINE = InnoDB;

CREATE INDEX `fk_nota_materia1_idx` ON `digital`.`notas` (`materia_idmateria` ASC, `materia_area_idarea` ASC);

CREATE INDEX `fk_nota_periodo1_idx` ON `digital`.`notas` (`periodo_idperiodo` ASC);

CREATE INDEX `fk_nota_aniolectivo1_idx` ON `digital`.`notas` (`aniolectivo_idaniolectivo` ASC);

CREATE INDEX `fk_nota_docente1_idx` ON `digital`.`notas` (`docente_iddocente` ASC, `docente_profesion_idprofesion` ASC, `docente_curso_idcurso` ASC, `docente_curso_aniolectivo_idaniolectivo` ASC, `docente_curso_grado_idgrado` ASC);

CREATE INDEX `fk_nota_estudiante1_idx` ON `digital`.`notas` (`estudiante_idestudiante` ASC);


-- -----------------------------------------------------
-- Table `digital`.`docentematerias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`docentematerias` (
  `docente_iddocente` INT NOT NULL,
  `materia_idmateria` INT NOT NULL,
  PRIMARY KEY (`docente_iddocente`, `materia_idmateria`))
ENGINE = InnoDB;

CREATE INDEX `fk_docente_has_materia_materia1_idx` ON `digital`.`docentematerias` (`materia_idmateria` ASC);

CREATE INDEX `fk_docente_has_materia_docente1_idx` ON `digital`.`docentematerias` (`docente_iddocente` ASC);


-- -----------------------------------------------------
-- Table `digital`.`niveldesempenos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`niveldesempenos` (
  `idniveldesempeno` INT NOT NULL,
  `nombreniveldesempeno` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idniveldesempeno`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `digital`.`juiciodevalores`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`juiciodevalores` (
  `idjuiciodevalor` INT NOT NULL,
  `codjuiciodevalor` INT(11) NOT NULL,
  `nombrejuiciodevalor` VARCHAR(45) NOT NULL,
  `materia_idmateria` INT NOT NULL,
  `materia_area_idarea` INT NOT NULL,
  PRIMARY KEY (`idjuiciodevalor`, `materia_idmateria`, `materia_area_idarea`))
ENGINE = InnoDB;

CREATE INDEX `fk_juiciodevalor_materia1_idx` ON `digital`.`juiciodevalores` (`materia_idmateria` ASC, `materia_area_idarea` ASC);


-- -----------------------------------------------------
-- Table `digital`.`juiciodevalorniveldesempenos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `digital`.`juiciodevalorniveldesempenos` (
  `juiciodevalor_idjuiciodevalor` INT NOT NULL,
  `juiciodevalor_materia_idmateria` INT NOT NULL,
  `juiciodevalor_materia_area_idarea` INT NOT NULL,
  `niveldesempeno_idniveldesempeno` INT NOT NULL,
  PRIMARY KEY (`juiciodevalor_idjuiciodevalor`, `juiciodevalor_materia_idmateria`, `juiciodevalor_materia_area_idarea`, `niveldesempeno_idniveldesempeno`))
ENGINE = InnoDB;

CREATE INDEX `fk_juiciodevalor_has_niveldesempeno_niveldesempeno1_idx` ON `digital`.`juiciodevalorniveldesempenos` (`niveldesempeno_idniveldesempeno` ASC);

CREATE INDEX `fk_juiciodevalor_has_niveldesempeno_juiciodevalor1_idx` ON `digital`.`juiciodevalorniveldesempenos` (`juiciodevalor_idjuiciodevalor` ASC, `juiciodevalor_materia_idmateria` ASC, `juiciodevalor_materia_area_idarea` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
